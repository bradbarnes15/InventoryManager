//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;

public class OrderDetails : DBConnection
{
    public int    OrderDetails_Id { get; private set; }
    public int    Order_Id        { get; private set; }
    public string Product         { get; private set; }
    public string Product_Code    { get; private set; }
    public int    Quantity        { get; private set; }
    public Double Unit_Price      { get; private set; }
    public Double Extended_Price  { get; private set; }

    public OrderDetails(int Order_Id, string Product, int Quantity, double Unit_Price, double Extended_Price, string Product_Code)
    {
        this.Order_Id       = Order_Id;
        this.Product        = Product;
        this.Quantity       = Quantity;
        this.Unit_Price     = Unit_Price;
        this.Extended_Price = Extended_Price;
        this.Product_Code   = Product_Code;
        OrderDetails_Id     = -1;
    }

    private OrderDetails(int OrderDetails_Id, int Order_Id, string Product, int Quantity, double Unit_Price, double Extended_Price, string Product_Code)
    {
        this.OrderDetails_Id = OrderDetails_Id;
        this.Order_Id        = Order_Id;
        this.Product         = Product;
        this.Quantity        = Quantity;
        this.Unit_Price      = Unit_Price;
        this.Extended_Price  = Extended_Price;
        this.Product_Code    = Product_Code;
    }


    public void Save()
    {
        using (SqlConnection conn = new SqlConnection())
        {
            conn.ConnectionString = DBConnection.CONNECTION_STRING;
            conn.Open();

            string sql;

            if (OrderDetails_Id == -1)
            {
                sql = "INSERT INTO OrderDetails(Order_Id, Product, Product_Code Quantity, Unit_Price, Extended_Price) "
                    + "VALUES(@Order_Id, @Product, @Product_Code @Quantity, @Unit_Price, @Extended_Price) "
                    + "SELECT CAST (scope_identity() as int)";
            }
            else
            {
                sql = "UPDATE OrderDetails SET "
                    + "Order_Id = @Order_Id, Product = @Product, Product_Code = @Product_Code, Quantity = @Quantity, Unit_Price = @Unit_Price, Extended_Price = @Extended_Price "
                    + "WHERE OrderDetails_Id = @OrderDetails_Id";
            }

            SqlCommand command = new SqlCommand(sql, conn);

            command.Parameters.AddWithValue("Order_Id", Order_Id);
            command.Parameters.AddWithValue("Product", Product);
            command.Parameters.AddWithValue("Product_Code", Product_Code);
            command.Parameters.AddWithValue("Quantity", Quantity);
            command.Parameters.AddWithValue("Unit_Price", Unit_Price);
            command.Parameters.AddWithValue("Extended_Price", Extended_Price);

            if (OrderDetails_Id == -1)
            {
                OrderDetails_Id = (int)command.ExecuteScalar();
            }
            else
            {
                command.Parameters.AddWithValue("OrderDetails_Id", OrderDetails_Id);
                command.ExecuteNonQuery();
            }
        }
    }


    public static OrderDetails Get(int OrderDetails_Id)
    {
        using (SqlConnection conn = new SqlConnection())
        {
            conn.ConnectionString = DBConnection.CONNECTION_STRING;
            conn.Open();
            
            string sql = "SELECT OrderDetails_Id, Order_Id, Product, Product_Code, Quantity, Unit_Price, Extended_Price "
                       + "FROM OrderDetails "
                       + "WHERE OrderDetails_Id = @OrderDetails_Id";

            SqlCommand command = new SqlCommand(sql, conn);
            command.Parameters.AddWithValue("OrderDetails_Id", OrderDetails_Id);

            using (SqlDataReader reader = command.ExecuteReader())
            {
                if (reader.HasRows)
                {
                    reader.Read();

                    OrderDetails od = new OrderDetails(reader.GetInt32(0),
                                                       reader.GetInt32(1),
                                                       reader.GetString(2),
                                                       reader.GetInt32(4),
                                                       reader.GetDouble(5),
                                                       reader.GetDouble(6),
                                                       reader.GetString(3));
                    return od;
                }
                else
                {
                    return null;
                }
            }
        }
    }


    public static List<OrderDetails> GetAll()
    {
        using (SqlConnection conn = new SqlConnection())
        {
            conn.ConnectionString = DBConnection.CONNECTION_STRING;
            conn.Open();

            string sql = "SELECT OrderDetails_Id, Order_Id, Product, Product_Code, Quantity, Unit_Price, Extended_Price "
                       + "FROM OrderDetails ";

            SqlCommand command = new SqlCommand(sql, conn);
            using (SqlDataReader reader = command.ExecuteReader())
            {
                List<OrderDetails> OrderDetailsList = new List<OrderDetails>();

                while (reader.Read())
                {
                    OrderDetails od = new OrderDetails(reader.GetInt32(0),
                                                       reader.GetInt32(1),
                                                       reader.GetString(2),
                                                       reader.GetInt32(4),
                                                       reader.GetDouble(5),
                                                       reader.GetDouble(6),
                                                       reader.GetString(3));

                    OrderDetailsList.Add(od);
                }

                return OrderDetailsList;
            }
        }
    }


    public static List<OrderDetails> GetAllAt(int Order_Id)
    {
        using (SqlConnection conn = new SqlConnection())
        {
            conn.ConnectionString = DBConnection.CONNECTION_STRING;
            conn.Open();

            string sql = "SELECT OrderDetails_Id, Order_Id, Product, Product_Code, Quantity, Unit_Price, Extended_Price "
                       + "FROM OrderDetails "
                       + "WHERE Order_Id = @Order_Id";

            SqlCommand command = new SqlCommand(sql, conn);
            command.Parameters.AddWithValue("Order_Id", Order_Id);

            using (SqlDataReader reader = command.ExecuteReader())
            {
                List<OrderDetails> OrderDetailsList = new List<OrderDetails>();

                while (reader.Read())
                {
                    OrderDetails od = new OrderDetails(reader.GetInt32(0),
                                                       reader.GetInt32(1),
                                                       reader.GetString(2),
                                                       reader.GetInt32(4),
                                                       reader.GetDouble(5),
                                                       reader.GetDouble(6),
                                                       reader.GetString(3));

                    OrderDetailsList.Add(od);
                }

                return OrderDetailsList;
            }
        }
    }


    public override string ToString()
    {
		return this.Product + " Quantity: " + this.Quantity;
	}

}

